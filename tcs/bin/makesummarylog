#!/bin/sh
########################################################################

# This file is part of the UNAM telescope control system.

# $Id: makesummarylog 3373 2019-10-30 15:09:02Z Alan $

########################################################################

# Copyright Â© 2015, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

export PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/gnu-getopt/bin:/bin:/usr/bin:/usr/local/bin

program=$(basename "$0")

usageerror () {
  echo 1>&2 "usage: $program [-d date]"
  exit 1
}

optstring=d:p:
date="now +4 hour"
prefix=/usr/local
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  -d)
    date="$2"
    shift 2
    ;;
  -p)
    prefix="$2"
    shift 2
    ;;
  *)
    usageerror
    ;;
  esac
done
shift
if test $# != 0
then
  usageerror
fi

mkdir -p $prefix/var/tcs/summary-logs
cd $prefix/var/tcs/summary-logs

currentdate=$(date +"%Y%m%d" -d "$date")
previousdate=$(date +"%Y%m%d" -d "$date -1 day")
currentfulldate=$(date +"%Y-%m-%d" -d "$date")
previousfulldate=$(date +"%Y-%m-%d" -d "$date -1 day")

exec 3>&1

(
  if test -f $prefix/var/tcs/$previousdate/log/summary.txt
  then
    tac $prefix/var/tcs/$previousdate/log/summary.txt
  fi
  if test -f $prefix/var/tcs/$currentdate/log/summary.txt
  then
    tac $prefix/var/tcs/$currentdate/log/summary.txt
  fi
) |
(
  cat <<EOF
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>RATIR/OAN: Summary Log for Night of $currentfulldate UTC</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta http-equiv="refresh" content="300"/>
<link rel="stylesheet" type="text/css" href="style.css"/>
</head>
<body>
<h1>RATIR/OAN: Summary Log for Night of $currentfulldate UTC</h1>

<p><a href="/">Home</a> | <a href="./">Index</a></p>

<p>Summary log from $previousfulldate 20:00 UTC to $currentfulldate 20:00 UTC.</p>

<pre>
EOF
  sort -sr -k 1,2 | 
  grep -av "^$previousfulldate [01]" |
  grep -av "^$currentfulldate 2" |
  grep -a \
   -e ' sunserver: 's \
   -e ' selectorserver: ' \
   -e ' weatherserver: ' \
   -e ' gcntanserver: ' \
   -e ' supervisorserver: ' \
   -e ' executorserver: .*: witness FWHM ' \
   -e ' error: ' |
  grep -av 'swiftbatgrbpostest' |
  grep -av 'focused timestamp' |
  grep -av ': no visit selected' |
  sed '
    s/\([^ ]*\)server: /\1: /
    s/\([^ ]*\)client: /\1: /
    s/: summary: /: /
  ' |
  sed '
    /[0-9][0-9]:[0-9][0-9]:[0-9][0-9]/!s/^/  /
    s/&/\&amp;/g
    s/</\&lt;/g
    s/>/\&gt;/g
    s/"/\&quot;/g
    s/-0/\&minus;0/g
    s/-1/\&minus;1/g
    s/-2/\&minus;2/g
    s/-3/\&minus;3/g
    s/-4/\&minus;4/g
    s/-5/\&minus;5/g
    s/-6/\&minus;6/g
    s/-7/\&minus;7/g
    s/-8/\&minus;8/g
    s/-9/\&minus;9/g
    s/0\&minus;/0-/g
    s/1\&minus;/1-/g
    s/2\&minus;/2-/g
    s/3\&minus;/3-/g
    s/4\&minus;/4-/g
    s/5\&minus;/5-/g
    s/6\&minus;/6-/g
    s/7\&minus;/7-/g
    s/8\&minus;/8-/g
    s/9\&minus;/9-/g
    s/[a-zA-Z0-9]*: error: .*/<em class="error">&<\/em>/
    s/[a-zA-Z0-9]*: warning: .*/<em class="warning">&<\/em>/
    s/ selector: \(executing\|finished executing\).*/<em class="summary">&<\/em>/
    s/ executor: [0-9]*T[0-9]*\(C[0-9]\)o\.fits: witness FWHM / executor: \1 witness FWHM /
  '
  cat <<EOF
</pre>
</body>
</html>
EOF
) >$currentdate.html.$$-tmp
mv $currentdate.html.$$-tmp $currentdate.html

latest=$(
  find . -name "[0-9]*.html" |
  sort -nr |
  head -1
)
ln -f $latest latest.html

(
  cat <<EOF
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>RATIR/OAN: Summary Logs</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta http-equiv="refresh" content="300"/>
<link rel="stylesheet" type="text/css" href="style.css"/>
</head>
<body>
<h1>RATIR/OAN: Summary Logs</h1>

<p><a href="/">Home</a></p>

<ul>
<li><a href="latest.html">Latest</a></li>
EOF
  find . -name "[0-9]*.html" |
  sort -nr |
  sed 's:\./\([0-9][0-9]*\)\.html:<li><a href="\1.html">\1</a></li>:'
  cat <<EOF
</ul>
</body>
</html>
EOF
) >index.html.$$-tmp
mv index.html.$$-tmp index.html

cat <<EOF >>style.css.$$-tmp
@charset "utf-8";
body, input, pre, table {
  font-family:        "Verdana", sans-serif;
  font-size:          10px;
}

body        {
  padding:            0.5em;
}

h1 {
  font-size:          16px;
  margin:             0;
  padding:            0;
  margin-bottom:      0.5em;
}

h2 {
  font-size:          12px;
  margin:             0;
  padding:            0;
  margin-top:         0.5em;
  margin-bottom:      0.5em;
}

ul,li {
  margin:             0em;
  margin-left:        0.5em;
  padding:            0em;
  padding-left:       0.5em;
}

em.summary {
  font-style:         normal;
  font-weight:        bold;
}

em.warning {
  font-style:         normal;
  font-weight:        bold;
  background-color:   #fea;
}

em.error {
  font-style:         normal;
  font-weight:        bold;
  background-color:   #f88;
}
EOF
mv style.css.$$-tmp style.css



  



