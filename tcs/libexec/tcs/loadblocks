#!/bin/sh

export PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/gnu-getopt/bin:/bin:/usr/bin:/usr/local/bin

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [blockfile]"
  exit 1
}

error () {
  log error "$@"
  exit 1
}

log () {
  level=$1
  shift
  tcs log "$program" $level "$*"
  echo 1>&2 "$(date -u '+%F %T'): $program: $level: $*"
}

optstring=
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  *)
    usageerror
    ;;
  esac
done
shift
if test $# = 0
then
  blockfile="$tcsprefix"/etc/tcs/blocks/BLOCKS
  targetdate=$(date +%Y%m%d)
elif test $# = 1
then
  blockfile="$1"
  targetdate=$(date +%Y%m%d)
elif test $# = 2
then
  blockfile="$1"
  case $1 in
  [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9])
    targetdate="$2"
    ;;
  *)
    targetdate=$(date +%Y%m%d -d "$2")
    ;;
  esac
else
  usageerror
fi

if test ! -r "$blockfile"
then
  log info "cannot read \"$blockfile\"."
  exit 1
fi

################################################################################

log info "blockfile is $blockfile."
log info "target date is $targetdate."

targetdayofyear="$(date +%j -d $targetdate | sed 's/^0*//')"
log info "target day of year is $targetdayofyear."

################################################################################

cd $(dirname "$blockfile")
blockfile=$(basename "$blockfile")

################################################################################

queuedir=/usr/local/var/tcs/blocks
sudo mkdir -p "$queuedir"

################################################################################

log info "generating blocks."

for script in *.sh
do
  log info "running $script generate."
  sudo sh $script generate
done

################################################################################

log summary "loading blocks."

expand "$blockfile" |
awk \
 -v queuedir="$queuedir" \
 -v targetdate="$targetdate" \
 -v targetdayofyear="$targetdayofyear" \
'
/^ *#/ {
  # Skip comment lines.
  next;
}
/^ *$/ {
  # Skip empty lines.
  next;
}
NF >= 4 {
  action     = $1 
  priority   = $2
  duplicates = $3
  blockfile  = $4
}
NF == 7 && $5 == "day" {
  phase = $6
  period = $7
  if (phase != targetdayofyear % period)
    next;
}
NF == 6 && $5 == "date" {
  date = $6
  if (date != targetdate)
    next;
}
{
  if (duplicates > 999) {
    duplicates = 999
  }
}
action == "load" {
  for (i = 0; i < duplicates; ++i)
    printf("for blockfile in %s.json; do echo load $blockfile %s-%03d-$blockfile; done\n", blockfile, priority, i)
}
action == "unload" {
  if (duplicates == "*") {
    printf("echo unload - \"%s-*-%s.json\"\n", priority, blockfile)
  } else {
    for (i = 0; i < duplicates; ++i)
      printf("unload - \"%s-%03d-%s.json\"\n", priority, i, blockfile)
  }
}
' |
sh |
while read action src dst
do
  if test "$action" = "load"
  then
    log info "loading $dst."
    sudo cp "$src" "$queuedir"/$dst
  else
    log info "unloading $dst."
    sudo rm -f "$queuedir"/$dst
  fi
done

################################################################################

log info "cleaning generated blocks."

for script in *.sh
do
  log info "running $script clean."
  sudo sh $script clean
done

################################################################################

log summary "finished loading blocks."

exit 0

################################################################################
