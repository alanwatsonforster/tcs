#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

export PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/gnu-getopt/bin:/bin:/usr/bin:/usr/local/bin

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [-N N] [--] fitsfile ..."
  exit 1
}

N=4
optstring=N:
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  -N)
    N=$2
    shift 2
    ;;
  *)
    usageerror
    ;;
  esac
done
shift
if test $# = 0
then
  usageerror
fi

(
  awk -v N=$N '
  BEGIN {
    M = int(6 * 1024 / N);
    for (iy = N - 1; iy >= 0; --iy) {
      for (ix = 0; ix < N; ++ix) {
        sx = ix * M;
        nx = M;
        sy = 54 + iy * M;
        ny = M;
        printf("[%d:%d,%d:%d]\n", sx + 1, sx + nx, sy + 1, sy + ny)
      }
    }
  }
  ' /dev/null
) |
while read section 
do
  echo $section $(tcs fitsfocus -z SFCPS -A -s $section "$@" | sed '/:/d')
done |
awk -v N=$N '
BEGIN {
  i = 0;
  n = 0;
}
{
  printf("%24s %5d %.2f\n", $1, $2, $3);
  z[i] = $2;
  ++i;
  s += $2;
  ++n;
}
END {
  zmean = s / n;
  for (i = 0; i < n; ++i) {
    printf("%+5.0f", z[i] - zmean);
    if (i % N == N - 1)
      printf("\n");
    else
      printf("  ");
  }
}'

exit 0
