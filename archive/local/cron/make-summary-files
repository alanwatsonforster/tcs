#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2018, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

case $(hostname | sed 's/\..*//')
transientsoan-nas)
  archivedir=/mnt/volume/archive-ratir
  ;;
*)
  archivedir=/mnt/storage/archive
  ;;
esac

mkdir -p $archivedir/public
mkdir -p $archivedir/log

cd $archivedir/public

awk -F, '

BEGIN {
  lastdate               = "";
  lastproposalidentifier = "";
  lastvisitidentifier    = "";
  lastbase               = "";
}

NF == 13 {

  date                  = $1;
  proposalidentifier    = $2;
  visitidentifier       = $3;

  hhmmss = substr($4, 10, 6) + 0;
  if (hhmmss > lasthhmmss + 2) {
    totalexposures += 1;
    chargedexposuretime = 0;
    if (exposuretime["C3"] != 0) {
      chargedexposuretime = exposuretime["C3"]; 
    } else if (exposuretime["C2"] != 0) {
      chargedexposuretime = exposuretime["C2"]; 
    } else if (exposuretime["C1"] != 0) {
      chargedexposuretime = exposuretime["C1"]; 
    } else if (exposuretime["C0"] != 0) {
      chargedexposuretime = exposuretime["C0"]; 
    }
    totalchargedexposuretime += chargedexposuretime;
    delete exposuretime;
  }
  lasthhmmss = hhmmss;

  if (date == "" || proposalidentifier == "" || visitidentifier == "")
    next;  

  if (proposalidentifier != lastproposalidentifier || visitidentifier != lastvisitidentifier) {
    if (lastdate != "") {
      printf("%s,%s,%s,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f\n", \
        lastdate, lastproposalidentifier, lastvisitidentifier, \
        totalexposures, totalchargedexposuretime, \
        channelexposures["C0"], channelexposuretime["C0"], \
        channelexposures["C1"], channelexposuretime["C1"], \
        channelexposures["C2"], channelexposuretime["C2"], \
        channelexposures["C3"], channelexposuretime["C3"])
    }
    printf("%s,", date);
    totalexposures           = 0;
    totalchargedexposuretime = 0;
    delete channelexposures;
    delete channelexposuretime;
  }

  channel               = $5;
  exposuretime[channel] = $7;

  channelexposures[channel]    += 1;
  channelexposuretime[channel] += exposuretime[channel];

  lastdate               = date;
  lastproposalidentifier = proposalidentifier;
  lastvisitidentifier    = visitidentifier;

}

END {
    totalexposures           += 1;
    totalchargedexposuretime += chargedexposuretime;
    printf("%s,%s,%s,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f\n", \
      lastdate, lastproposalidentifier, lastvisitidentifier, \
      totalexposures, totalchargedexposuretime, \
      channelexposures["C0"], channelexposuretime["C0"], \
      channelexposures["C1"], channelexposuretime["C1"], \
      channelexposures["C2"], channelexposuretime["C2"], \
      channelexposures["C3"], channelexposuretime["C3"])
}

' log.csv |
tee summary.csv-$$-tmp |
awk -F, '
{
  printf("%s %s %s %6d %4d %5d %4d %5d %4d %5d %4d %5d %4d %5d\n", \
    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14);
}
' >summary.txt-$$-tmp

install -CpS summary.csv-$$-tmp summary.csv
install -CpS summary.txt-$$-tmp summary.txt

for semester in \
  2013A 2013B \
  2014A 2014B \
  2015A 2015B \
  2016A 2016B \
  2017A 2017B \
  2018A 2018B \
  2019A 2019B
do
  year=$(echo $semester | sed 's/[AB]//')
  ab=$(echo $semester | sed 's/[0-9]*//')
  grep "^$year-" summary.csv | 
  case $ab in
  A)
    grep "^$year-0[123456]-"
    ;;
  B)
    grep -v "^$year-0[123456]-"
    ;;
  esac |
  awk -F, '
  {
    total[$3] += $6;
  }
  END {
    for (id in total) {
      printf("%s,%.2f\n", id, total[id] / 3600);
    }
  }
  ' |
  sort |
  tee summary-$semester.csv-$$-tmp |
  sed 's/,/ /g' >summary-$semester.txt-$$-tmp
  install -CpS summary-$semester.csv-$$-tmp summary-$semester.csv
  install -CpS summary-$semester.txt-$$-tmp summary-$semester.txt
done

rm summary*-tmp
