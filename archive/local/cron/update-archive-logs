#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

# $Id: update-archive-logs 3373 2019-10-30 15:09:02Z Alan $

########################################################################

# Copyright Â© 2018, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

case $(hostname | sed 's/\..*//') in
transientsoan-nas)
  archivedir=/mnt/volume/archive-ratir
  ;;
*)
  archivedir=/mnt/storage/archive
  ;;
esac

mkdir -p $archivedir/public

cd $archivedir/public

if test "$1" = ""
then
  year=$(date +%Y)
else
  year=$1
fi

(
  cd $archivedir/date 
  find . -name "$year*.fits.txt" |
  sort -t/ -k5 |
  awk '{ printf("echo @START %s; cat %s\n", $0, $0); }' |
  sh
) |
grep -E '^(@START |CCD_NAME=|EXPTIME =|DATE-OBS=|ACQTIME1=|SDATE   =|FILTA   =|SFL     =|STRSTRA =|STRSTDE =|STROBHA =|STROBAM =|END$)' |
sed '
  /^@START /s/.txt//
  /^@START /s:/: :g
  s/=/ /
' |
awk '

function stringvalue(s) {
  sub("^'"'"'", "", s);
  sub("'"'"'$", "", s);
  gsub("'"''"'", "'"'"'", s);
  sub(" *$", "", s);
  gsub(",", "", s);
  return s;
}

$1 == "@START" {
  proposalid = $4;
  visitid = $5;
  filename = $6;
  channel = "";
  type = "";
  exptime = "";
  dateobs = "";
  acqtime1 = "";
  sdate = "";
  filter = "";
  alpha = "";
  delta = "";
  ha = "";
  X = "";
  if (filename ~ "C0") {
    channel = "C0";
  } else if (filename ~ "C1") {
    channel = "C1";
  } else if (filename ~ "C2") {
    channel = "C2";
  } else if (filename ~ "C3") {
    channel = "C3";
  }
}
$1 == "CCD_NAME" {
  channel = stringvalue($2);
}
$1 == "EXPTIME" {
  exptime = $2;
}
$1 == "DATE-OBS" {
  dateobs = substr(stringvalue($2) "000", 1, 23);
}
$1 == "ACQTIME1" {
  acqtime1 = substr(stringvalue($2) "000", 1, 23);
}
$1 == "SDATE" {
  sdate = substr(stringvalue($2) "000", 1, 23);
}
$1 == "FILTA" || $1 == "SFL" {
  filter = stringvalue($2);
}
$1 == "STRSTRA" {
  alpha = $2;
}
$1 == "STRSTDE" {
  delta = $2;
}
$1 == "STROBHA" {
  ha = $2;
}
$1 == "STROBAM" {
  X = $2;
}
$1 == "END" {
  if (proposalid ~ "-0") {
    public = "true"
  } else {
    public = "false"
  }
  if (filename ~ "o.fits$") {
    type = "object";
  } else if (filename ~ "b.fits$") {
    type = "bias";
  } else if (filename ~ "d.fits$") {
    type = "dark";
  } else if (filename ~ "f.fits$") {
    type = "flat";
  }
  if ((channel == "C2" || channel == "C3") && acqtime1 != "") {
    dateobs = substr(acqtime1, 1, 10) "T" substr(acqtime1, 12);
  }
  if (dateobs == "") {
    dateobs = sdate;
  }
  if (channel == "C2") {
    filter = "ZY";
  } else if (channel == "C3") {
    filter = "JH";
  }
  printf("%s,%s,%d,%s,%s,%s,%.3f,%s,%.5f,%.5f,%.5f,%.3f,%s\n", 
    dateobs, proposalid, visitid, filename, 
    channel, type, exptime, filter,
    alpha, delta, ha, X, 
    public);
}
' | 
tee log-$year.csv-$$-tmp |
awk -F, '{
  printf("%23s %s %6d %s %s %-6s %8.3f %-8s %9.5f %+10.5f %+10.5f %.3f %-5s\n",
  $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13);
}' >log-$year.txt-$$-tmp

install -CpS log-$year.csv-$$-tmp log-$year.csv
install -CpS log-$year.txt-$$-tmp log-$year.txt

cat log-*.csv >log.csv-$$-tmp
cat log-*.txt >log.txt-$$-tmp

install -CpS log.csv-$$-tmp log.csv
install -CpS log.txt-$$-tmp log.txt

rm -f log-$year.*-tmp
rm -f log.*-tmp

awk -F, '

BEGIN {
  lastdate               = "";
  lastproposalidentifier = "";
  lastvisitidentifier    = "";
  lastbase               = "";
}

NF == 13 {

  date                  = $1;
  proposalidentifier    = $2;
  visitidentifier       = $3;

  hhmmss = substr($4, 10, 6) + 0;
  if (hhmmss > lasthhmmss + 2) {
    totalexposures += 1;
    chargedexposuretime = 0;
    if (exposuretime["C3"] != 0) {
      chargedexposuretime = exposuretime["C3"]; 
    } else if (exposuretime["C2"] != 0) {
      chargedexposuretime = exposuretime["C2"]; 
    } else if (exposuretime["C1"] != 0) {
      chargedexposuretime = exposuretime["C1"]; 
    } else if (exposuretime["C0"] != 0) {
      chargedexposuretime = exposuretime["C0"]; 
    }
    totalchargedexposuretime += chargedexposuretime;
    delete exposuretime;
  }
  lasthhmmss = hhmmss;

  if (date == "" || proposalidentifier == "" || visitidentifier == "")
    next;  

  if (proposalidentifier != lastproposalidentifier || visitidentifier != lastvisitidentifier) {
    if (lastdate != "") {
      printf("%s,%s,%s,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f\n", \
        lastdate, lastproposalidentifier, lastvisitidentifier, \
        totalexposures, totalchargedexposuretime, \
        channelexposures["C0"], channelexposuretime["C0"], \
        channelexposures["C1"], channelexposuretime["C1"], \
        channelexposures["C2"], channelexposuretime["C2"], \
        channelexposures["C3"], channelexposuretime["C3"])
    }
    printf("%s,", date);
    totalexposures           = 0;
    totalchargedexposuretime = 0;
    delete channelexposures;
    delete channelexposuretime;
  }

  channel               = $5;
  exposuretime[channel] = $7;

  channelexposures[channel]    += 1;
  channelexposuretime[channel] += exposuretime[channel];

  lastdate               = date;
  lastproposalidentifier = proposalidentifier;
  lastvisitidentifier    = visitidentifier;

}

END {
    totalexposures           += 1;
    totalchargedexposuretime += chargedexposuretime;
    printf("%s,%s,%s,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f,%d,%.0f\n", \
      lastdate, lastproposalidentifier, lastvisitidentifier, \
      totalexposures, totalchargedexposuretime, \
      channelexposures["C0"], channelexposuretime["C0"], \
      channelexposures["C1"], channelexposuretime["C1"], \
      channelexposures["C2"], channelexposuretime["C2"], \
      channelexposures["C3"], channelexposuretime["C3"])
}

' log.csv |
tee summary.csv-$$-tmp |
awk -F, '
{
  printf("%s %s %s %6d %4d %5d %4d %5d %4d %5d %4d %5d %4d %5d\n", \
    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14);
}
' >summary.txt-$$-tmp

install -CpS summary.csv-$$-tmp summary.csv
install -CpS summary.txt-$$-tmp summary.txt

rm summary*-tmp
