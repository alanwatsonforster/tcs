#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2018, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

export PATH=/usr/local/bin:/usr/bin:/bin

archivedir=/usr/local/var/archive/
localarchivedir=/archive2/
bindir=/usr/local/etc/archive

mkdir -p "$archivedir/date"

cd "$archivedir/date"
sudo /bin/sh "$(dirname "$0")"/move-raw-images

# Create the .fits.bz2 files.
echo 1>&2 $(date +%H:%M:%S:) creating .fits.bz2 files.
cd "$archivedir/date"
find . -name "*.fits" |
while read fits
do
  bz2="$fits.bz2"
  txt="$fits.txt"
  if test -w "$fits" && test ! -e "$bz2"
  then
    echo 1>&2 $(date +%H:%M:%S:) creating $bz2.
    bzip2 -c -1 "$fits"
    if test "$(bunzip2 -c $bz2 | fold -80 | sed 's/ *$//;/^END$/q' | tail -1)" != "END"
    then
      echo 1>&2 $(date +%H:%M:%S:) $fits is incomplete.
      mv "$bz2" "$bz2-incomplete"
    fi
    rm -f "$txt"
  fi
done
find "$archivedir/date" -name "*-tmp" | xargs rm -f
  
# Create the .fits.txt files.
echo 1>&2 $(date +%H:%M:%S:) creating .fits.txt files.
cd "$archivedir/date"
find . -name "*.fits.bz2" |
sed 's/\.bz2$//' |
while read fits
do
  bz2="$fits.bz2"
  txt="$fits.txt"
  if test ! -e "$txt"
  then
    echo 1>&2 $(date +%H:%M:%S:) creating $txt.
    bunzip2 -c "$bz2" | fold -80 | sed 's/ *$//;/^END$/q' >"$txt-$$-tmp"
    mv "$txt-$$-tmp" "$txt"
  fi
done
find "$archivedir/date" -name "*-tmp" | xargs rm -f
  
# Create the log .csv files.
echo 1>&2 $(date +%H:%M:%S:) creating log .csv files.
mkdir -p "$archivedir/log/"
cd "$archivedir/date/"
find . -mindepth 1 -maxdepth 1 -type d |
sort |
while read date
do
  csv="$archivedir/log/$date.csv"
  if test ! -e "$csv" || 
     test ! -z "$(find "$archivedir/date/$date" -name "*.txt" -newer "$csv")" ||
     test "$(find "$archivedir/date/$date" -name "*.txt" | wc -l)" != "$(wc -l <"$csv")"
  then
    echo 1>&2 $(date +%H:%M:%S:) creating $csv.
    cd "$archivedir/date/$date"
    find . -name "*.txt" | 
    sh "$bindir/make-log-csv-file" >"$csv-$$-tmp"
    mv "$csv-$$-tmp" "$csv"
  fi    
done
find "$archivedir/log" -name "*-tmp" | xargs rm -f

# Create the log .txt files.
echo 1>&2 $(date +%H:%M:%S:) creating log .txt files.
cd "$archivedir/log"
find . -name "*.csv" |
sed 's/\.csv$//' |
sort |
while read date
do
  csv="$date.csv"
  txt="$date.txt"
  if test ! -e "$txt" || test "$csv" -nt "$txt"
  then
    echo 1>&2 $(date +%H:%M:%S:) creating $txt.
    sh "$bindir/make-log-txt-file" <"$csv" >"$txt-$$-tmp"
    mv "$txt-$$-tmp" "$txt"
  fi
done
find "$archivedir/log" -name "*-tmp" | xargs rm -f

# Create the proposal links.
(
  echo 1>&2 $(date +%H:%M:%S:) creating proposal links.
  mkdir -p "$archivedir/proposal/"
  cd "$archivedir/date/"
  find . -mindepth 1 -maxdepth 1 -type d |
  while read date
  do
    cd "$archivedir/date/$date"
    find . -print | cpio -pdlu --quiet "$archivedir/proposal/"
  done
)

# Create the public links.
(
  echo 1>&2 $(date +%H:%M:%S:) creating public links.
  mkdir -p "$archivedir/public"
  cd "$archivedir/proposal/"
  (
    find . -name "*.fits.txt"
    find . -name "*.fits.bz2" -path "./2012A-0???/*"
  ) | cpio -pdlu --quiet "$archivedir/public"
  cd "$archivedir/proposal/"
  for proposal in *-[123456789]*
  do
    cd "$archivedir/proposal/$proposal"
    find . -print | cpio -pdlu --quiet "$archivedir/pi/$proposal/$proposal"
  done
)

# Copy the .fits.bz2 into the local archive.
echo 1>&2 $(date +%H:%M:%S:) copying to local archive.
rsync -a --exclude "*.txt" "$archivedir/date/." "$localarchivedir/."

echo 1>&2 $(date +%H:%M:%S:) done.
